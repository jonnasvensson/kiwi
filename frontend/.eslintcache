[{"/home/node/app/src/serviceWorker.js":"1","/home/node/app/src/features/counter/Counter.js":"2","/home/node/app/src/App.js":"3","/home/node/app/src/features/counter/counterSlice.js":"4","/home/node/app/src/index.js":"5","/home/node/app/src/app/store.js":"6","/home/node/app/src/views/Login.js":"7","/home/node/app/src/views/Register.js":"8","/home/node/app/src/views/Main.js":"9","/home/node/app/src/components/Aside.js":"10","/home/node/app/src/components/LoginForm.js":"11","/home/node/app/src/components/MiddleMain.js":"12","/home/node/app/src/components/Card.js":"13","/home/node/app/src/UserContext.js":"14","/home/node/app/src/assets/axiosURLs.js":"15"},{"size":5141,"mtime":1611229152858,"results":"16","hashOfConfig":"17"},{"size":1626,"mtime":1611229152858,"results":"18","hashOfConfig":"17"},{"size":1084,"mtime":1612790350581,"results":"19","hashOfConfig":"17"},{"size":1551,"mtime":1611229152858,"results":"20","hashOfConfig":"17"},{"size":644,"mtime":1611229152858,"results":"21","hashOfConfig":"17"},{"size":206,"mtime":1611229152858,"results":"22","hashOfConfig":"17"},{"size":458,"mtime":1611931233063,"results":"23","hashOfConfig":"17"},{"size":17722,"mtime":1612727906889,"results":"24","hashOfConfig":"17"},{"size":852,"mtime":1611931230563,"results":"25","hashOfConfig":"17"},{"size":272,"mtime":1612174155541,"results":"26","hashOfConfig":"17"},{"size":2988,"mtime":1612538449580,"results":"27","hashOfConfig":"17"},{"size":4902,"mtime":1612802020865,"results":"28","hashOfConfig":"17"},{"size":1179,"mtime":1612801828973,"results":"29","hashOfConfig":"17"},{"size":145,"mtime":1611905081447,"results":"30","hashOfConfig":"17"},{"size":691,"mtime":1612727891353,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"q8p6n1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/node/app/src/serviceWorker.js",[],["71","72"],"/home/node/app/src/features/counter/Counter.js",[],["73","74"],"/home/node/app/src/App.js",["75"],"import React, { useState } from 'react';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './styles/App.scss';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Login from './views/Login'\r\nimport Register from './views/Register'\r\nimport Main from './views/Main'\r\nimport Aside from './components/Aside'\r\nimport { UserContext, UserIdContext } from './UserContext';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [userId, setUserId] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Aside />\r\n\r\n        {/* kan /main g√∂ras till att bli username i URL */}\r\n        <UserIdContext.Provider value={{ userId, setUserId }} >\r\n          <Route exact path=\"/\" component={Login} />\r\n          <UserContext.Provider value={{ user, setUser }}>\r\n            <Route path=\"/main\" component={Main} />\r\n          </UserContext.Provider>\r\n          <Route path=\"/registrera\" component={Register} />\r\n        </UserIdContext.Provider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/node/app/src/features/counter/counterSlice.js",[],"/home/node/app/src/index.js",[],"/home/node/app/src/app/store.js",[],["76","77"],"/home/node/app/src/views/Login.js",[],["78","79"],"/home/node/app/src/views/Register.js",["80","81"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../styles/Register.scss';\nimport { areaOneApi, areaTwoApi, areaThreeApi, registerUserApi, allUsersApi, bookClubsApi } from '../assets/axiosURLs'\n\nexport default function Register() {\n    const [allAreas, setAllAreas] = useState([]);\n    const [allUsers, setAllUsers] = useState([]);\n    const [input, setInput] = useState({\n        username: '',\n        password: '',\n        repeatPassword: '',\n        name: '',\n        gender: '',\n        // area: '',\n        // age: '',\n        // categories: [],\n        // meetUpTime: [],\n        // readLanguage: [],\n        // speakLanguage: []\n    });\n    const [categories, setCategories] = useState([]);\n    const [meetUpTimes, setMeetUpTimes] = useState([]);\n    const [readLanguages, setReadLanguages] = useState([]);\n    const [speakLanguages, setSpeakLanguages] = useState([]);\n\n    const [selectArea, setSelectArea] = useState('');\n    const [selectAge, setSelectAge] = useState('');\n    const [error, setError] = useState(false);\n    const [errorPassword, setErrorPassword] = useState(false);\n    const [errorBookClub, setErrorBookClub] = useState(false);\n    const [usersInBooklub, setUsersInBookClub] = useState([]);\n\n    \n    useEffect(() => {\n        getAreaAPI();\n        getUsers();\n    }, [])\n    \n    const createBookClub = (members) => {\n        let bookClub = {\n            name: 'Bok',\n            category: categories,\n            members: members\n        }\n        if (categories) {\n            \n            axios\n                .post(bookClubsApi, bookClub )\n                .then((res) => {})\n                .catch(error => console.error(error));\n        }\n    }\n\n    const matchingUsers = (mappedUser) => {\n            mappedUser = allUsers.map(user => user)\n            .filter(user => user.area === selectArea)\n            .filter(user => user.gender === input.gender)\n            .filter(user => user.age === selectAge)\n\n            .filter(user => {\n                let categoryMatch = user.categories.find((category, index) => {\n                    return category === categories[index];\n                })\n                if (categoryMatch == null) {\n                    console.log('no match', categoryMatch);\n                    return\n                }\n                if (categoryMatch) {\n                    return user;\n                }\n                return user;\n            })\n            .filter(user => {\n                let meetUpTimeMatch = user.meetUpTimes.find((meetUpTime, index) => {\n                    return meetUpTime === meetUpTimes[index];\n                })\n                if (meetUpTimeMatch) {\n                    return user\n                }\n                return user;\n            })\n            .filter(user => {\n                let readLanguageMatch = user.readLanguages.find((readLanguage, index) => {\n                    return readLanguage === readLanguages[index];\n                })\n                if (readLanguageMatch) {\n                    return user\n                }\n                return user;\n            })\n            .filter(user => {\n                let speakLanguageMatch = user.speakLanguages.find((speakLanguage, index) => {\n                    return speakLanguage === speakLanguages[index];\n                })\n                if (speakLanguageMatch) {\n                    return user\n                }\n                return user;\n            })\n            return mappedUser\n        }\n    \n    const getAreaAPI = () => {\n        axios.all([\n            axios.get(areaOneApi),\n            axios.get(areaTwoApi),\n            axios.get(areaThreeApi)\n        ])\n            .then(responses => {\n                const responsesOne = responses[0]\n                const responsesTwo = responses[1]\n                const responsesThree = responses[2]\n                setAllAreas([...responsesOne.data.results, ...responsesTwo.data.results, ...responsesThree.data.results])\n            }\n            )\n            .catch(errors => console.error(errors));\n    }\n\n    const getUsers = () => {\n        axios\n            .get(allUsersApi)\n            .then(res => {\n                setAllUsers(res.data)\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    }\n\n    const handleChangeInput = (e) => {\n        // hanterar inputs och radiobuttons for gender\n        const target = e.target;\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\n        const name = target.name;\n        setInput({\n            ...input,\n            [name]: value\n        });\n    }\n\n\n    const handleSelectArea = (e) => {\n        setSelectArea(e.target.value);\n        // const target = e.target;\n        // const value = target.value;\n        // const name = target.name;\n\n        //         setSelected({\n        //         ...selected,\n        //         [name]: value\n        //     });\n    }\n\n    const handleSelectAge = (e) => {\n        setSelectAge(e.target.value);\n    }\n\n    const handleCategories = (e) => {\n        let checked = e.target.checked;\n        let value = e.target.value;\n        if (checked) {\n            setCategories([...categories, value]);\n        } else {\n            let filteredCategories = categories.filter(category => category !== value);\n            return setCategories(filteredCategories);\n        }\n\n        // const target = e.target;\n        // const value = target.type === \"checkbox\" ? target.checked : target.value;\n        // const name = target.name;\n\n    }\n    const handleMeetUpTime = (e) => {\n        let checked = e.target.checked;\n        let value = e.target.value;\n        if (checked) {\n            setMeetUpTimes([...meetUpTimes, value]);\n        } else {\n            // nedan g√∂r att om man klickar ur checkbxen s√• √§ndras v√§rdet\n            let filteredmeetUpTimes = meetUpTimes.filter(meetUpTime => meetUpTime !== value);\n            return setMeetUpTimes(filteredmeetUpTimes);\n        }\n    }\n\n    const handleReadLanguage = (e) => {\n        let checked = e.target.checked;\n        let value = e.target.value;\n        if (checked) {\n            setReadLanguages([...readLanguages, value]);\n        } else {\n            let filteredreadLanguages = readLanguages.filter(readLanguage => readLanguage !== value);\n            return setReadLanguages(filteredreadLanguages);\n        }\n    }\n\n    const handleSpeakLanguage = (e) => {\n        let checked = e.target.checked;\n        let value = e.target.value;\n        if (checked) {\n            setSpeakLanguages([...speakLanguages, value]);\n        } else {\n            let filteredspeakLanguages = speakLanguages.filter(speakLanguage => speakLanguage !== value);\n            return setSpeakLanguages(filteredspeakLanguages);\n        }\n    }\n\n    const postAxiosUser = () => {\n        let usersFromMatching = matchingUsers();\n\n        const user = {\n            username: input.username,\n            password: input.password,\n            name: input.name,\n            gender: input.gender,\n            area: selectArea,\n            age: selectAge,\n            categories: categories,\n            meetUpTimes: meetUpTimes,\n            readLanguages: readLanguages,\n            speakLanguages: speakLanguages\n        }\n        axios\n            .post(registerUserApi, user)\n            .then((res) => {\n                let newArray = [...usersFromMatching, ...res.data.ops]\n                setUsersInBookClub([...res.data.ops, ...usersFromMatching])\n                if (newArray.length >= 2) {\n                    createBookClub(newArray);\n                    console.log('bokklubb skapad');\n                } else {\n                    console.log('Bokklubb not created');\n                }\n             })\n            .catch(err => {\n                console.error(err);\n            })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!input.username) {\n            setError(true)\n            return\n        }\n        if (input.username) {\n            setError(false);\n            if (!input.password) {\n                setErrorPassword(true);\n                return\n            }\n            if (input.password === input.repeatPassword) {\n                setErrorPassword(false);\n                matchingUsers();\n                if (categories.length >= 1) {\n                    postAxiosUser();\n                }\n                if (categories.length === 0) {\n                    setErrorBookClub(true);\n                } else {\n                    setErrorBookClub(false);\n                }\n            } else {\n                setErrorPassword(false);\n            }\n        }\n    }\n\n\n    const\n        agesToMap = ['Ton√•ring', 'Ung vuxen', 'Vuxen', 'Pension√§r'],\n        meetUpTimesToMap = ['Vardagar dag', 'Vardag kv√§ll', 'Helger dag', 'Helger kv√§ll'],\n        categoriesToMap = ['Biografi', 'Deckare', 'Fantasy', 'Historia', 'Klassiker', 'Noveller', 'Personlig utveckling', 'Roman', 'Romance', 'Thriller'],\n        languagesToMap = ['Arabiska', 'Engelska', 'Danska', 'Finska', 'Franska', 'Italienska', 'Polska', 'Svenska', 'Spanska', 'Tyska'];\n\n    return (\n        <>\n            <form className=\"register-container\" onSubmit={handleSubmit} >\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"anv√§ndarnamn\"\n                    name=\"username\"\n                    required\n                    value={input.username}\n                    onChange={handleChangeInput}\n                />\n                <div className=\"error\">\n                    {\n                        error && <div className=\"title\">b√∂rja med ett anv√§ndarnamn</div>\n                    }\n                </div>\n                <input\n                    className=\"input\"\n                    type=\"password\"\n                    placeholder=\"l√∂senord\"\n                    name=\"password\"\n                    value={input.password}\n                    onChange={handleChangeInput}\n                />\n                <div className=\"error\">\n                    {\n                        errorPassword && <div className=\"title\">l√∂senorden st√§mmer inte √∂verrens</div>\n                    }\n                </div>\n                <input\n                    className=\"input\"\n                    type=\"password\"\n                    placeholder=\"repetera l√∂senord\"\n                    name=\"repeatPassword\"\n                    value={input.repeatPassword}\n                    onChange={handleChangeInput}\n                />\n                <div className=\"error\">\n                    {\n                        errorPassword && <div className=\"title\">l√∂senorden st√§mmer inte √∂verrens</div>\n                    }\n                </div>\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"namn\"\n                    name=\"name\"\n                    value={input.name}\n                    onChange={handleChangeInput}\n                />\n\n                <div className=\"select-container\">\n                    <p className=\"title\">Kommun</p>\n                    <select className=\"select\" value={selectArea} required onChange={handleSelectArea} >\n                        <option default></option>\n                        {\n                            allAreas.map((area) => (\n                                <option\n                                    name={area.kommun}\n                                    key={area.kommunkod}\n                                    value={area.kommun}\n                                >{area.kommun}</option>\n                            ))\n                        }\n                    </select>\n                </div>\n\n                <div className=\"radio-buttons-container\">\n                    <p className=\"title\">K√∂n</p>\n                    <div className=\"radio-group\">\n                        <input\n                            type=\"radio\"\n                            name=\"gender\"\n                            value='kvinna'\n                            onChange={handleChangeInput}\n                        />\n                        <label>Kvinna</label>\n                        <input\n                            type=\"radio\"\n                            name=\"gender\"\n                            value='man'\n                            onChange={handleChangeInput}\n                        />\n                        <label>Man</label>\n                    </div>\n                </div>\n\n                <div className=\"select-container\">\n                    <p className=\"title\">√Ölder</p>\n                    <select className=\"select\" value={selectAge} onChange={handleSelectAge}>\n                        <option default ></option>\n                        {\n                            agesToMap.map(age => (\n                                <option\n                                    name={age}\n                                    key={age}\n                                    value={age}\n                                >{age}</option>\n                            ))\n                        }\n                    </select>\n                </div>\n                <div className=\"line\"></div>\n                {/* beh√∂ver jag id p√• category, languagesToMap, age? */}\n                <div className=\"mapped-arrays-container\">\n                    <div className=\"container-title\">\n                        <p className=\"title\">Kategori</p>\n                        <div className=\"error\">\n                    {\n                        errorBookClub && <div className=\"title\">v√§lj en kategori</div>\n                    }\n                </div>\n                    </div>\n                    <div className=\"mapped-group\">\n                        {\n                            categoriesToMap.map((category, id) => (\n                                <div className=\"mappedArrays\" key={category}>\n                                    <input\n                                        type=\"checkbox\"\n                                        value={category}\n                                        name={category}\n                                        onChange={handleCategories}\n                                         />\n                                    <label>{category}</label>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"mapped-arrays-container\">\n                    <div className=\"container-title\">\n                        <p className=\"title\">N√§r vill du tr√§ffas?</p>\n                    </div>\n                    <div className=\"mapped-group\">\n                        {\n                            meetUpTimesToMap.map((meetUpTime, id) => (\n                                <div className=\"mappedArrays\" key={meetUpTime}>\n                                    <input\n                                        type=\"checkbox\"\n                                        name={meetUpTime}\n                                        value={meetUpTime}\n                                        onChange={handleMeetUpTime}\n                                    />\n                                    <label>{meetUpTime}</label>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n\n                <div className=\"mapped-arrays-container\">\n                    <div className=\"container-title\">\n                        <p className=\"title\">Vilket spr√•k vill du l√§sa p√•?</p>\n                    </div>\n                    <div className=\"mapped-group\">\n                        {\n                            languagesToMap.map((language, id) => (\n                                <div className=\"mappedArrays\" key={language}>\n                                    <input\n                                        type=\"checkbox\"\n                                        value={language}\n                                        name={language}\n                                        onChange={handleReadLanguage}\n                                    />\n                                    <label>{language}</label>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n\n                <div className=\"mapped-arrays-container\">\n                    <div className=\"container-title\">\n                        <p className=\"title\">Vilket spr√•k vill du prata p√•?</p>\n                    </div>\n                    <div className=\"mapped-group\">\n                        {\n                            languagesToMap.map((language, id) => (\n                                <div className=\"mappedArrays\" key={language}>\n                                    <input\n                                        type=\"checkbox\"\n                                        value={language}\n                                        name={language}\n                                        onChange={handleSpeakLanguage}\n                                    />\n                                    <label>{language}</label>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n\n                <div className=\"button-container\">\n                    <input className=\"button\" type=\"submit\" onClick={handleSubmit}/>\n                </div>\n                <Link to=\"/\">√Ñr du redan medlem? Klicka h√§r.</Link>\n            </form>\n        </>\n    )\n}","/home/node/app/src/views/Main.js",[],["82","83"],"/home/node/app/src/components/Aside.js",["84","85","86","87"],"import react from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport '../styles/Aside.scss'\n\nexport default function Aside() {\n    return (\n        <>\n            <div className=\"containerAside\">\n            </div>\n        </>\n    )\n}","/home/node/app/src/components/LoginForm.js",["88","89","90"],"import React, { useState, useContext } from 'react';\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport '../styles/LoginForm.scss'\nimport { UserIdContext } from '../UserContext';\nimport axios from 'axios';\nimport { loginApi } from '../assets/axiosURLs'\n\n\n\nexport default function LoginForm() {\n    const [input, setInput] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const { userId, setUserId } = useContext( UserIdContext );\n    const [allUsers, setAllUSers] = useState();\n    const history = useHistory();\n    \n     const  postUser = async () => {\n        let user = {\n            username: input.username,\n            password: input.password\n        }\n        try {\n            const response = await axios.post(loginApi, user);\n            setUserId(response.data._id)\n            localStorage.setItem('id', response.data._id);\n\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        setInput({\n            ...input,\n            [e.target.name]: value\n        });\n    }\n    const handleSubmit = async  (e) => {\n        e.preventDefault();\n        if (input.username && input.password) {\n            postUser();\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"containerLoginForm\">\n                <div className=\"containerForm\">\n                    <form onSubmit={handleSubmit}>\n                        <input\n                            className=\"input\"\n                            placeholder=\"anv√§ndarnamn\"\n                            type=\"text\"\n                            value={input.username}\n                            required\n                            name=\"username\"\n                            onChange={handleChange}\n                        />\n                        <input\n                            className=\"input\"\n                            placeholder=\"l√∂senord\"\n                            type=\"password\"\n                            value={input.password}\n                            name=\"password\"\n                            required\n                            onChange={handleChange}\n                        />\n                        <div className=\"containerButton\">\n                            <input\n                                type=\"submit\"\n                                className=\"button\"\n                                value=\"logga in.\"\n                            />\n                        </div>\n                    </form>\n                    <div className=\"containerLink\">\n                        <Link to=\"/registrera\">registrera.</Link>\n                    </div>\n                </div>\n                <div className=\"containerEmail\">\n                    <Link to=\"/registrera\">taletotell@gmail.com.</Link>\n                </div>\n                {\n                    userId && <Redirect to=\"/main\" />\n                }\n            </div>\n        </>\n    )\n}","/home/node/app/src/components/MiddleMain.js",["91","92","93"],"/home/node/app/src/components/Card.js",["94"],"/home/node/app/src/UserContext.js",["95"],"/home/node/app/src/assets/axiosURLs.js",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"97","replacedBy":"107"},{"ruleId":"99","replacedBy":"108"},{"ruleId":"97","replacedBy":"109"},{"ruleId":"99","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":33,"column":12,"nodeType":"105","messageId":"106","endLine":33,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":68,"column":21,"nodeType":"114","messageId":"115","endLine":68,"endColumn":27},{"ruleId":"97","replacedBy":"116"},{"ruleId":"99","replacedBy":"117"},{"ruleId":"103","severity":1,"message":"118","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"119","line":2,"column":27,"nodeType":"105","messageId":"106","endLine":2,"endColumn":33},{"ruleId":"103","severity":1,"message":"120","line":2,"column":35,"nodeType":"105","messageId":"106","endLine":2,"endColumn":40},{"ruleId":"103","severity":1,"message":"121","line":2,"column":42,"nodeType":"105","messageId":"106","endLine":2,"endColumn":46},{"ruleId":"103","severity":1,"message":"122","line":16,"column":12,"nodeType":"105","messageId":"106","endLine":16,"endColumn":20},{"ruleId":"103","severity":1,"message":"123","line":16,"column":22,"nodeType":"105","messageId":"106","endLine":16,"endColumn":33},{"ruleId":"103","severity":1,"message":"124","line":17,"column":11,"nodeType":"105","messageId":"106","endLine":17,"endColumn":18},{"ruleId":"103","severity":1,"message":"125","line":20,"column":19,"nodeType":"105","messageId":"106","endLine":20,"endColumn":23},{"ruleId":"103","severity":1,"message":"125","line":27,"column":23,"nodeType":"105","messageId":"106","endLine":27,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":35,"column":8,"nodeType":"128","endLine":35,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":4,"column":1,"nodeType":"132","endLine":33,"endColumn":2},{"ruleId":"103","severity":1,"message":"133","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"134","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar",["135"],["136"],["135"],["136"],"'usersInBooklub' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["135"],["136"],"'react' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'allUsers' is assigned a value but never used.","'setAllUSers' is assigned a value but never used.","'history' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setUser' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["137"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'React' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [setUser, userId]",{"range":"140","text":"141"},[1093,1095],"[setUser, userId]"]